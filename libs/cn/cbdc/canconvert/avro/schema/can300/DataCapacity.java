/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package cn.cbdc.canconvert.avro.schema.can300;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DataCapacity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4036610120060109512L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DataCapacity\",\"namespace\":\"cn.cbdc.canconvert.avro.schema.can300\",\"fields\":[{\"name\":\"timeAndCoordinate\",\"type\":{\"type\":\"record\",\"name\":\"TimeAndCoordinate\",\"fields\":[{\"name\":\"gps\",\"type\":{\"type\":\"record\",\"name\":\"GPS\",\"fields\":[{\"name\":\"gpsDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"point\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Point\",\"fields\":[{\"name\":\"latitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"longitude\",\"type\":[\"null\",\"double\"],\"default\":null}]}]},{\"name\":\"pdop\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"hdop\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"vdop\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"measureCount\",\"type\":[\"null\",\"long\"],\"default\":null}],\"default\":null}},{\"name\":\"mm\",\"type\":{\"type\":\"record\",\"name\":\"MM\",\"fields\":[{\"name\":\"point\",\"type\":[\"null\",\"Point\"],\"default\":null},{\"name\":\"rticLinkId\",\"type\":[\"null\",\"long\"],\"default\":null}],\"default\":null}}],\"default\":null}},{\"name\":\"canFrameNumber\",\"type\":{\"type\":\"record\",\"name\":\"CanFrameNumber\",\"fields\":[{\"name\":\"dataCapacityType\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"dataCapacityNumber\",\"type\":[\"null\",\"long\"],\"default\":null}],\"default\":null}},{\"name\":\"canInformationList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"CanInformation\",\"fields\":[{\"name\":\"canId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"dataLengthAfterCompression\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"time\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"outsideUseDataMap\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":\"string\"}}],\"default\":null}],\"default\":null},\"java-class\":\"java.util.List\"}},{\"name\":\"type3OutsideUseData\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Type3OutsideUseData\",\"fields\":[{\"name\":\"dateTime\",\"type\":\"string\"},{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"},{\"name\":\"unit\",\"type\":\"string\"}],\"default\":null},\"java-class\":\"java.util.List\"}}],\"default\":null}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DataCapacity> ENCODER =
      new BinaryMessageEncoder<DataCapacity>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DataCapacity> DECODER =
      new BinaryMessageDecoder<DataCapacity>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<DataCapacity> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<DataCapacity> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DataCapacity>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this DataCapacity to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a DataCapacity from a ByteBuffer. */
  public static DataCapacity fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate timeAndCoordinate;
  @Deprecated public cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber canFrameNumber;
  @Deprecated public java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> canInformationList;
  @Deprecated public java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> type3OutsideUseData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DataCapacity() {}

  /**
   * All-args constructor.
   * @param timeAndCoordinate The new value for timeAndCoordinate
   * @param canFrameNumber The new value for canFrameNumber
   * @param canInformationList The new value for canInformationList
   * @param type3OutsideUseData The new value for type3OutsideUseData
   */
  public DataCapacity(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate timeAndCoordinate, cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber canFrameNumber, java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> canInformationList, java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> type3OutsideUseData) {
    this.timeAndCoordinate = timeAndCoordinate;
    this.canFrameNumber = canFrameNumber;
    this.canInformationList = canInformationList;
    this.type3OutsideUseData = type3OutsideUseData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timeAndCoordinate;
    case 1: return canFrameNumber;
    case 2: return canInformationList;
    case 3: return type3OutsideUseData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timeAndCoordinate = (cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate)value$; break;
    case 1: canFrameNumber = (cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber)value$; break;
    case 2: canInformationList = (java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation>)value$; break;
    case 3: type3OutsideUseData = (java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timeAndCoordinate' field.
   * @return The value of the 'timeAndCoordinate' field.
   */
  public cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate getTimeAndCoordinate() {
    return timeAndCoordinate;
  }

  /**
   * Sets the value of the 'timeAndCoordinate' field.
   * @param value the value to set.
   */
  public void setTimeAndCoordinate(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate value) {
    this.timeAndCoordinate = value;
  }

  /**
   * Gets the value of the 'canFrameNumber' field.
   * @return The value of the 'canFrameNumber' field.
   */
  public cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber getCanFrameNumber() {
    return canFrameNumber;
  }

  /**
   * Sets the value of the 'canFrameNumber' field.
   * @param value the value to set.
   */
  public void setCanFrameNumber(cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber value) {
    this.canFrameNumber = value;
  }

  /**
   * Gets the value of the 'canInformationList' field.
   * @return The value of the 'canInformationList' field.
   */
  public java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> getCanInformationList() {
    return canInformationList;
  }

  /**
   * Sets the value of the 'canInformationList' field.
   * @param value the value to set.
   */
  public void setCanInformationList(java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> value) {
    this.canInformationList = value;
  }

  /**
   * Gets the value of the 'type3OutsideUseData' field.
   * @return The value of the 'type3OutsideUseData' field.
   */
  public java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> getType3OutsideUseData() {
    return type3OutsideUseData;
  }

  /**
   * Sets the value of the 'type3OutsideUseData' field.
   * @param value the value to set.
   */
  public void setType3OutsideUseData(java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> value) {
    this.type3OutsideUseData = value;
  }

  /**
   * Creates a new DataCapacity RecordBuilder.
   * @return A new DataCapacity RecordBuilder
   */
  public static cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder newBuilder() {
    return new cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder();
  }

  /**
   * Creates a new DataCapacity RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DataCapacity RecordBuilder
   */
  public static cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder newBuilder(cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder other) {
    return new cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder(other);
  }

  /**
   * Creates a new DataCapacity RecordBuilder by copying an existing DataCapacity instance.
   * @param other The existing instance to copy.
   * @return A new DataCapacity RecordBuilder
   */
  public static cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder newBuilder(cn.cbdc.canconvert.avro.schema.can300.DataCapacity other) {
    return new cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder(other);
  }

  /**
   * RecordBuilder for DataCapacity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DataCapacity>
    implements org.apache.avro.data.RecordBuilder<DataCapacity> {

    private cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate timeAndCoordinate;
    private cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.Builder timeAndCoordinateBuilder;
    private cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber canFrameNumber;
    private cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.Builder canFrameNumberBuilder;
    private java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> canInformationList;
    private java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> type3OutsideUseData;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timeAndCoordinate)) {
        this.timeAndCoordinate = data().deepCopy(fields()[0].schema(), other.timeAndCoordinate);
        fieldSetFlags()[0] = true;
      }
      if (other.hasTimeAndCoordinateBuilder()) {
        this.timeAndCoordinateBuilder = cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.newBuilder(other.getTimeAndCoordinateBuilder());
      }
      if (isValidValue(fields()[1], other.canFrameNumber)) {
        this.canFrameNumber = data().deepCopy(fields()[1].schema(), other.canFrameNumber);
        fieldSetFlags()[1] = true;
      }
      if (other.hasCanFrameNumberBuilder()) {
        this.canFrameNumberBuilder = cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.newBuilder(other.getCanFrameNumberBuilder());
      }
      if (isValidValue(fields()[2], other.canInformationList)) {
        this.canInformationList = data().deepCopy(fields()[2].schema(), other.canInformationList);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type3OutsideUseData)) {
        this.type3OutsideUseData = data().deepCopy(fields()[3].schema(), other.type3OutsideUseData);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing DataCapacity instance
     * @param other The existing instance to copy.
     */
    private Builder(cn.cbdc.canconvert.avro.schema.can300.DataCapacity other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.timeAndCoordinate)) {
        this.timeAndCoordinate = data().deepCopy(fields()[0].schema(), other.timeAndCoordinate);
        fieldSetFlags()[0] = true;
      }
      this.timeAndCoordinateBuilder = null;
      if (isValidValue(fields()[1], other.canFrameNumber)) {
        this.canFrameNumber = data().deepCopy(fields()[1].schema(), other.canFrameNumber);
        fieldSetFlags()[1] = true;
      }
      this.canFrameNumberBuilder = null;
      if (isValidValue(fields()[2], other.canInformationList)) {
        this.canInformationList = data().deepCopy(fields()[2].schema(), other.canInformationList);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type3OutsideUseData)) {
        this.type3OutsideUseData = data().deepCopy(fields()[3].schema(), other.type3OutsideUseData);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'timeAndCoordinate' field.
      * @return The value.
      */
    public cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate getTimeAndCoordinate() {
      return timeAndCoordinate;
    }

    /**
      * Sets the value of the 'timeAndCoordinate' field.
      * @param value The value of 'timeAndCoordinate'.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setTimeAndCoordinate(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate value) {
      validate(fields()[0], value);
      this.timeAndCoordinateBuilder = null;
      this.timeAndCoordinate = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timeAndCoordinate' field has been set.
      * @return True if the 'timeAndCoordinate' field has been set, false otherwise.
      */
    public boolean hasTimeAndCoordinate() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'timeAndCoordinate' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.Builder getTimeAndCoordinateBuilder() {
      if (timeAndCoordinateBuilder == null) {
        if (hasTimeAndCoordinate()) {
          setTimeAndCoordinateBuilder(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.newBuilder(timeAndCoordinate));
        } else {
          setTimeAndCoordinateBuilder(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.newBuilder());
        }
      }
      return timeAndCoordinateBuilder;
    }

    /**
     * Sets the Builder instance for the 'timeAndCoordinate' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setTimeAndCoordinateBuilder(cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate.Builder value) {
      clearTimeAndCoordinate();
      timeAndCoordinateBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'timeAndCoordinate' field has an active Builder instance
     * @return True if the 'timeAndCoordinate' field has an active Builder instance
     */
    public boolean hasTimeAndCoordinateBuilder() {
      return timeAndCoordinateBuilder != null;
    }

    /**
      * Clears the value of the 'timeAndCoordinate' field.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder clearTimeAndCoordinate() {
      timeAndCoordinate = null;
      timeAndCoordinateBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'canFrameNumber' field.
      * @return The value.
      */
    public cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber getCanFrameNumber() {
      return canFrameNumber;
    }

    /**
      * Sets the value of the 'canFrameNumber' field.
      * @param value The value of 'canFrameNumber'.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setCanFrameNumber(cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber value) {
      validate(fields()[1], value);
      this.canFrameNumberBuilder = null;
      this.canFrameNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'canFrameNumber' field has been set.
      * @return True if the 'canFrameNumber' field has been set, false otherwise.
      */
    public boolean hasCanFrameNumber() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'canFrameNumber' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.Builder getCanFrameNumberBuilder() {
      if (canFrameNumberBuilder == null) {
        if (hasCanFrameNumber()) {
          setCanFrameNumberBuilder(cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.newBuilder(canFrameNumber));
        } else {
          setCanFrameNumberBuilder(cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.newBuilder());
        }
      }
      return canFrameNumberBuilder;
    }

    /**
     * Sets the Builder instance for the 'canFrameNumber' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setCanFrameNumberBuilder(cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber.Builder value) {
      clearCanFrameNumber();
      canFrameNumberBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'canFrameNumber' field has an active Builder instance
     * @return True if the 'canFrameNumber' field has an active Builder instance
     */
    public boolean hasCanFrameNumberBuilder() {
      return canFrameNumberBuilder != null;
    }

    /**
      * Clears the value of the 'canFrameNumber' field.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder clearCanFrameNumber() {
      canFrameNumber = null;
      canFrameNumberBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'canInformationList' field.
      * @return The value.
      */
    public java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> getCanInformationList() {
      return canInformationList;
    }

    /**
      * Sets the value of the 'canInformationList' field.
      * @param value The value of 'canInformationList'.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setCanInformationList(java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation> value) {
      validate(fields()[2], value);
      this.canInformationList = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'canInformationList' field has been set.
      * @return True if the 'canInformationList' field has been set, false otherwise.
      */
    public boolean hasCanInformationList() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'canInformationList' field.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder clearCanInformationList() {
      canInformationList = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type3OutsideUseData' field.
      * @return The value.
      */
    public java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> getType3OutsideUseData() {
      return type3OutsideUseData;
    }

    /**
      * Sets the value of the 'type3OutsideUseData' field.
      * @param value The value of 'type3OutsideUseData'.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder setType3OutsideUseData(java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData> value) {
      validate(fields()[3], value);
      this.type3OutsideUseData = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type3OutsideUseData' field has been set.
      * @return True if the 'type3OutsideUseData' field has been set, false otherwise.
      */
    public boolean hasType3OutsideUseData() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type3OutsideUseData' field.
      * @return This builder.
      */
    public cn.cbdc.canconvert.avro.schema.can300.DataCapacity.Builder clearType3OutsideUseData() {
      type3OutsideUseData = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DataCapacity build() {
      try {
        DataCapacity record = new DataCapacity();
        if (timeAndCoordinateBuilder != null) {
          record.timeAndCoordinate = this.timeAndCoordinateBuilder.build();
        } else {
          record.timeAndCoordinate = fieldSetFlags()[0] ? this.timeAndCoordinate : (cn.cbdc.canconvert.avro.schema.can300.TimeAndCoordinate) defaultValue(fields()[0]);
        }
        if (canFrameNumberBuilder != null) {
          record.canFrameNumber = this.canFrameNumberBuilder.build();
        } else {
          record.canFrameNumber = fieldSetFlags()[1] ? this.canFrameNumber : (cn.cbdc.canconvert.avro.schema.can300.CanFrameNumber) defaultValue(fields()[1]);
        }
        record.canInformationList = fieldSetFlags()[2] ? this.canInformationList : (java.util.List<cn.cbdc.canconvert.avro.schema.can300.CanInformation>) defaultValue(fields()[2]);
        record.type3OutsideUseData = fieldSetFlags()[3] ? this.type3OutsideUseData : (java.util.List<cn.cbdc.canconvert.avro.schema.can300.Type3OutsideUseData>) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DataCapacity>
    WRITER$ = (org.apache.avro.io.DatumWriter<DataCapacity>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DataCapacity>
    READER$ = (org.apache.avro.io.DatumReader<DataCapacity>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
